create or replace package AOC21_P10 as

    function find(pIn in varchar2) return varchar2;
    function score_two(pIn in varchar2) return number;

    procedure part_one(pOut in out varchar2);
    procedure part_two(pOut in out varchar2);

end;
/
create or replace package body AOC21_P10 as

    /*
        ---- DDL

        CREATE TABLE  "AOC21_D01_INPUT" 
        (	"ID" NUMBER NOT NULL ENABLE, 
            "COL001" VARCHAR2(1000), 
            CONSTRAINT "AOC21_D01_INPUT_PK" PRIMARY KEY ("ID")
        USING INDEX  ENABLE
        ) 

        CREATE TABLE  "AOC21_D10_SCORE" 
        (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY
                "SCORE" NUMBER, 
            CONSTRAINT "AOC21_D10_SCORE_PK" PRIMARY KEY ("ID")
                USING INDEX  ENABLE
        )   
   */ 


    function find(pIn in varchar2) return varchar2
    is
        vIn varchar2(1000);

        vLen number;
        vOld number;

        vCheck  varchar2(1000);
    begin
        vIn := pIn;

        vLen := LENGTH(vIn);
        vOld := vLen +1;

        while vLen < vOld
        loop
            vIn := replace(vIn,'()','');
            vIn := replace(vIn,'[]','');
            vIn := replace(vIn,'{}','');
            vIn := replace(vIn,'<>','');

            vOld := vLen;
            vLen := LENGTH(vIn);
        end loop;

        if vLen = 0 then
            return '@';
        end if;

        vCheck := regexp_substr(vIn,'[^])>}]+',1,1);
        if vCheck = vIn then
            return '@'||vIn;
        else
            vCheck := translate(vIn,'@([{<','@');
            return substr(vCheck,1,1);
        end if;
    end;

    procedure part_one(pOut in out varchar2)
    is
        vRes varchar2(10);
        vScoreTot number :=0;
        vLineScore number;
    begin
        FOR cI IN ( SELECT * FROM AOC21_D10_INPUT)
        LOOP
            vRes := find(pIn => cI.COL001);
            select decode(vRes,')',3,']',57,'}',1197,'>',25137,0) into vLineScore from dual;
            vScoreTot := vScoreTot + vLineScore;
        END LOOP;
        pOut := vScoreTot;
    end;


    function score_two(pIn in varchar2) return number
    is
        vScoreTot number :=0;
        vCharScore number;        
    begin
        FOR cI IN ( SELECT column_value val from table(apex_string.split(pIn,'')) )
            LOOP
                select decode(cI.val,')',1,']',2,'}',3,'>',4,0) into vCharScore from dual;
                vScoreTot := vScoreTot *5 + vCharScore;
            END LOOP;

        return vScoreTot;
    end;    

    procedure part_two(pOut in out varchar2)
    is
        vRes varchar2(1000);
        vScoreTot number :=0;
        vLineScore number;    
    begin
        DELETE FROM AOC21_D10_SCORE;

        FOR cI IN ( SELECT * FROM AOC21_D10_INPUT)
        LOOP

            vRes := find(pIn => cI.COL001);
            select decode(vRes,')',3,']',57,'}',1197,'>',25137,0) into vLineScore from dual;
            if vLineScore = 0 then
                -- incomplete line
                vRes := substr(vRes,2);
                vRes := translate(vRes,'([{<',')]}>');
                select reverse(vRes) into vRes from dual;
                vLineScore  := score_two(vRes);

                INSERT INTO AOC21_D10_SCORE(SCORE) VALUES(vLineScore);
            end if;

        END LOOP;

        SELECT MEDIAN(SCORE)
            INTO vScoreTot
             FROM AOC21_D10_SCORE;        

        pOut := vScoreTot;
    end;    

end;
/
declare
    vOut varchar2(100);
begin
    AOC21_P10.part_one(pOut => vOut);
    htp.prn('part one: illopa says '||vOut||'<BR />');
    AOC21_P10.part_two(pOut => vOut);
    htp.prn('part two: illopa says '||vOut||'<BR />');
end;
create or replace package AOC21_P13 as

    procedure part_one(pOut in out varchar2);
    procedure part_two(pOut in out varchar2);

end;
/
create or replace package body AOC21_P13 as

    /*
        -- DDL

            CREATE TABLE  "AOC21_D13_INPUT" 
            (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY , 
                "COL001" NUMBER, 
                "COL002" NUMBER, 
                PRIMARY KEY ("ID")
            USING INDEX  ENABLE
            )

            CREATE TABLE  "AOC21_D13_POINT" 
            (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY , 
                "COL001" NUMBER, 
                "COL002" NUMBER, 
                PRIMARY KEY ("ID")
            USING INDEX  ENABLE
            )          

            CREATE TABLE  "AOC21_D13_FOLD" 
            (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY, 
                "DIR" VARCHAR2(1), 
                "NUM" NUMBER, 
                CONSTRAINT "AOC21_D13_FOLD_PK" PRIMARY KEY ("ID")
            USING INDEX  ENABLE
            )           

     */

    procedure part_one(pOut in out varchar2)
    is
        vFoldNum number;
    begin

        DELETE FROM AOC21_D13_POINT;

        INSERT INTO AOC21_D13_POINT(COL001,COL002)
            SELECT COL001,COL002 FROM AOC21_D13_INPUT;

        vFoldNum := 655;

        INSERT INTO AOC21_D13_POINT(COL001,COL002)
        select (vFoldNum*2-col001), col002
        FROM AOC21_D13_POINT
        where col001 > vFoldNum AND col001 <= (vFoldNum*2);

        select count(*)
            into pOut
            FROM (
            SELECT DISTINCT col001,col002
            FROM AOC21_D13_POINT
            where col001 < vFoldNum);        

    end;

    procedure part_two(pOut in out varchar2)
    is
        vRes varchar2(100);
        vLastX number;
        vLastY number;
    begin
        DELETE FROM AOC21_D13_POINT;

        INSERT INTO AOC21_D13_POINT(COL001,COL002)
            SELECT COL001,COL002 FROM AOC21_D13_INPUT;

        FOR cFold IN (SELECT * FROM AOC21_D13_FOLD ORDER BY ID)    
            LOOP

                if cFold.DIR = 'X' then

                    INSERT INTO AOC21_D13_POINT(COL001,COL002)
                        select (cFold.NUM*2-col001), col002
                            FROM AOC21_D13_POINT
                            where col001 > cFold.NUM AND col001 <= (cFold.NUM*2);   
                    vLastX := cFold.NUM;
                else

                    INSERT INTO AOC21_D13_POINT(COL001,COL002)
                        select col001, (cFold.NUM*2 -col002)
                            FROM AOC21_D13_POINT
                            where col002 > cFold.NUM AND col002 <= (cFold.NUM*2);

                    vLastY := cFold.NUM;

                end if;     

            END LOOP;


            FOR I IN 0..(vLastY-1)
                LOOP

                    SELECT LISTAGG(V) within group (order by P)
                        INTO vRes
                        FROM (
                            SELECT L.p, C.COL001, (CASE WHEN C.COL001 IS NOT null THEN '#' ELSE '.' END) v
                                FROM (SELECT LEVEL-1 P FROM dual connect by level <= vLastX) L 
                                LEFT JOIN  AOC21_D13_CODE c ON c.col001 = l.p AND col002 = I
                        );
                    htp.prn(vRes||'<BR />');
                END LOOP;
            


    end;    

end;
/
declare
    vOut varchar2(100);
begin
    AOC21_P13.part_one(pOut => vOut);
    htp.prn('part one: illopa says '||vOut||'<BR />');

    htp.prn('part two: illopa says <BR />');
    AOC21_P13.part_two(pOut => vOut);
    
    
end;